// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apis.Models;

#nullable disable

namespace apis.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240419153606_DbInit")]
    partial class DbInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("apis.Models.Car", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("deleted")
                        .HasColumnType("int");

                    b.Property<int>("driver_id")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("longtext");

                    b.Property<string>("number_plate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("driver_id");

                    b.ToTable("cars");

                    b.HasData(
                        new
                        {
                            id = 1,
                            created_at = new DateTime(2024, 4, 19, 15, 36, 5, 114, DateTimeKind.Utc).AddTicks(9056),
                            deleted = 0,
                            driver_id = 1,
                            note = "",
                            number_plate = "49A 222222",
                            type = "6 cho"
                        });
                });

            modelBuilder.Entity("apis.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("deleted")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("otp")
                        .HasColumnType("int");

                    b.Property<DateTime>("otp_life")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            avatar = "",
                            created_at = new DateTime(2024, 4, 19, 15, 36, 5, 114, DateTimeKind.Utc).AddTicks(8277),
                            deleted = 0,
                            latitude = "10.800102",
                            longitude = "106.665794",
                            name = "Nguyen Van A",
                            otp = 123456,
                            otp_life = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            phone_number = "0123456789"
                        });
                });

            modelBuilder.Entity("apis.Models.DispatchJob", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cancell_reason")
                        .HasColumnType("longtext");

                    b.Property<int?>("car_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int>("dispatcher_id")
                        .HasColumnType("int");

                    b.Property<int?>("driver_id")
                        .HasColumnType("int");

                    b.Property<string>("end_address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("end_latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("end_longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("note")
                        .HasColumnType("longtext");

                    b.Property<string>("start_address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("start_latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("start_longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("car_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("dispatcher_id");

                    b.HasIndex("driver_id");

                    b.ToTable("dispatch_jobs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            car_id = 1,
                            created_at = new DateTime(2024, 4, 19, 15, 36, 5, 114, DateTimeKind.Utc).AddTicks(9123),
                            customer_id = 1,
                            dispatcher_id = 1,
                            driver_id = 1,
                            end_address = "",
                            end_latitude = "10.801418",
                            end_longitude = "106.661530",
                            start_address = "",
                            start_latitude = "10.800102",
                            start_longitude = "106.665794",
                            status = 1
                        });
                });

            modelBuilder.Entity("apis.Models.Dispatcher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("deleted")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("otp")
                        .HasColumnType("int");

                    b.Property<DateTime>("otp_life")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dispatchers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            avatar = "",
                            created_at = new DateTime(2024, 4, 19, 15, 36, 5, 114, DateTimeKind.Utc).AddTicks(8926),
                            deleted = 0,
                            email = "",
                            name = "Nguyen Van B",
                            otp = 654321,
                            otp_life = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            phone_number = "01212345678"
                        });
                });

            modelBuilder.Entity("apis.Models.Driver", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("current_address")
                        .HasColumnType("longtext");

                    b.Property<int?>("deleted")
                        .HasColumnType("int");

                    b.Property<int>("is_active")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("drivers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "HCM",
                            created_at = new DateTime(2024, 4, 19, 15, 36, 5, 114, DateTimeKind.Utc).AddTicks(8998),
                            deleted = 0,
                            is_active = 1,
                            latitude = "10.800450",
                            longitude = "106.666357",
                            name = "Nguyen Van C",
                            password = "abcd",
                            phone_number = "1234234523",
                            status = 0
                        });
                });

            modelBuilder.Entity("apis.Models.Car", b =>
                {
                    b.HasOne("apis.Models.Driver", "driver")
                        .WithMany("cars")
                        .HasForeignKey("driver_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("driver");
                });

            modelBuilder.Entity("apis.Models.DispatchJob", b =>
                {
                    b.HasOne("apis.Models.Car", "car")
                        .WithMany("dispatch_jobs")
                        .HasForeignKey("car_id");

                    b.HasOne("apis.Models.Customer", "customer")
                        .WithMany("dispatch_Jobs")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apis.Models.Dispatcher", "dispatcher")
                        .WithMany("dispatch_jobs")
                        .HasForeignKey("dispatcher_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apis.Models.Driver", "driver")
                        .WithMany("dispatch_jobs")
                        .HasForeignKey("driver_id");

                    b.Navigation("car");

                    b.Navigation("customer");

                    b.Navigation("dispatcher");

                    b.Navigation("driver");
                });

            modelBuilder.Entity("apis.Models.Car", b =>
                {
                    b.Navigation("dispatch_jobs");
                });

            modelBuilder.Entity("apis.Models.Customer", b =>
                {
                    b.Navigation("dispatch_Jobs");
                });

            modelBuilder.Entity("apis.Models.Dispatcher", b =>
                {
                    b.Navigation("dispatch_jobs");
                });

            modelBuilder.Entity("apis.Models.Driver", b =>
                {
                    b.Navigation("cars");

                    b.Navigation("dispatch_jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
