// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apis.Models;

#nullable disable

namespace apis.Migrations
{
    [DbContext(typeof(database_context))]
    [Migration("20240404040449_DBInit")]
    partial class DBInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("apis.Models.car", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("driver_id")
                        .HasColumnType("int");

                    b.Property<int?>("driverid")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("number_plate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("driverid");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("apis.Models.customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("OTP")
                        .HasColumnType("int");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("apis.Models.dispatch_job", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("cancell_reason")
                        .HasColumnType("longtext");

                    b.Property<int?>("car_id")
                        .HasColumnType("int");

                    b.Property<int?>("carid")
                        .HasColumnType("int");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int?>("customerid")
                        .HasColumnType("int");

                    b.Property<int>("dispatcher_id")
                        .HasColumnType("int");

                    b.Property<int?>("dispatcherid")
                        .HasColumnType("int");

                    b.Property<int?>("driver_id")
                        .HasColumnType("int");

                    b.Property<int?>("driverid")
                        .HasColumnType("int");

                    b.Property<string>("end_address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("end_date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("end_latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("end_longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("note")
                        .HasColumnType("longtext");

                    b.Property<string>("start_address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("start_latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("start_longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("status")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("carid");

                    b.HasIndex("customerid");

                    b.HasIndex("dispatcherid");

                    b.HasIndex("driverid");

                    b.ToTable("dispatch_Jobs");
                });

            modelBuilder.Entity("apis.Models.dispatcher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dispatchers");
                });

            modelBuilder.Entity("apis.Models.driver", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("current_address")
                        .HasColumnType("longtext");

                    b.Property<int>("is_active")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("longitude")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("drivers");
                });

            modelBuilder.Entity("apis.Models.car", b =>
                {
                    b.HasOne("apis.Models.driver", "driver")
                        .WithMany("cars")
                        .HasForeignKey("driverid");

                    b.Navigation("driver");
                });

            modelBuilder.Entity("apis.Models.dispatch_job", b =>
                {
                    b.HasOne("apis.Models.car", "car")
                        .WithMany("dispatch_Jobs")
                        .HasForeignKey("carid");

                    b.HasOne("apis.Models.customer", "customer")
                        .WithMany("dispatch_Jobs")
                        .HasForeignKey("customerid");

                    b.HasOne("apis.Models.dispatcher", "dispatcher")
                        .WithMany("dispatch_jobs")
                        .HasForeignKey("dispatcherid");

                    b.HasOne("apis.Models.driver", "driver")
                        .WithMany("dispatch_Jobs")
                        .HasForeignKey("driverid");

                    b.Navigation("car");

                    b.Navigation("customer");

                    b.Navigation("dispatcher");

                    b.Navigation("driver");
                });

            modelBuilder.Entity("apis.Models.car", b =>
                {
                    b.Navigation("dispatch_Jobs");
                });

            modelBuilder.Entity("apis.Models.customer", b =>
                {
                    b.Navigation("dispatch_Jobs");
                });

            modelBuilder.Entity("apis.Models.dispatcher", b =>
                {
                    b.Navigation("dispatch_jobs");
                });

            modelBuilder.Entity("apis.Models.driver", b =>
                {
                    b.Navigation("cars");

                    b.Navigation("dispatch_Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
